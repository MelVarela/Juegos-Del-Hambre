/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package principal;

import java.awt.*;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author emilio.jose.varelaso
 */
public class frameJuego extends javax.swing.JFrame {

    /**
     * Creates new form frameJuego
     */
    public frameJuego() {
        initComponents();
    }
    
    public void setJugadoresArena(ArrayList<Personaje> personajes){
        arena.setPersonajes(personajes);
    }
    
    public void setEquipos(ArrayList<Equipo> equipos){
        this.equipos = equipos;
    }
    
    Area arena = new Area("Arena");
    Area bosque = new Area("Bosque");
    Area costa = new Area("Costa");
    int dia = 1;
    boolean sumar = false;
    boolean finalizado = false;
    
    ArrayList<Area> areas = new ArrayList<>();
    DefaultListModel muertos = new DefaultListModel();
    ArrayList<Equipo> equipos = new ArrayList<>();
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        mapa = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jugadoresArea = new javax.swing.JList<>();
        conexiones = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaFallecidos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        displayMuerte = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        areaEventos = new javax.swing.JTextArea();
        pasarDia = new javax.swing.JButton();
        labelDia = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        mapa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mapa.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Arena", "Bosque", "Costa" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        mapa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(mapa);

        jugadoresArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(jugadoresArea);

        conexiones.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        conexiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conexionesActionPerformed(evt);
            }
        });

        listaFallecidos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(listaFallecidos);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Fallecidos:");

        displayMuerte.setEditable(false);
        displayMuerte.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        areaEventos.setEditable(false);
        areaEventos.setColumns(20);
        areaEventos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        areaEventos.setRows(5);
        areaEventos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane4.setViewportView(areaEventos);

        pasarDia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pasarDia.setText("Pasar d√≠a");
        pasarDia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pasarDiaMouseClicked(evt);
            }
        });

        labelDia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelDia.setText("Inicio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(conexiones)
                    .addComponent(jScrollPane3))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(110, 110, 110))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(displayMuerte, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(12, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDia, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pasarDia)
                .addGap(629, 629, 629))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3))
                                .addGap(32, 32, 32)
                                .addComponent(conexiones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addComponent(displayMuerte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(pasarDia)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conexionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conexionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_conexionesActionPerformed

    private void mapaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapaMouseClicked
        String selected = mapa.getSelectedValue();
        
        switch(selected){
            case "Arena" ->{
                String texto = "Conecta con:" + arena.getStringConexiones();
                conexiones.setText(texto);
                jugadoresArea.setModel(arena.devolverModeloJugadores());
            }
            case "Bosque" ->{
                String texto = "Conecta con:" + bosque.getStringConexiones();
                conexiones.setText(texto);
                jugadoresArea.setModel(bosque.devolverModeloJugadores());
            }
            case "Costa" ->{
                String texto = "Conecta con:" + costa.getStringConexiones();
                conexiones.setText(texto);
                jugadoresArea.setModel(costa.devolverModeloJugadores());
            }
        }
    }//GEN-LAST:event_mapaMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void pasarDiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pasarDiaMouseClicked
        if(finalizado){
            JOptionPane.showMessageDialog(rootPane, "La simulaci√≥n ha finalizado");
        }else{
            areaEventos.setText("");
            if(!checkVictoria()){
                if(sumar){
                    dia++;
                    labelDia.setText(String.format("Dia %d", dia));
                    sumar = false;
                    ticDiurno();
                }else{
                    sumar = true;
                    labelDia.setText(String.format("Noche %d", dia));
                    ticNocturno();
                }
            }else{
                victoria();
            }
        }
    }//GEN-LAST:event_pasarDiaMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        areas.add(arena);
        areas.add(bosque);
        areas.add(costa);
        
        arena.a√±adirConexion(bosque);
        arena.a√±adirConexion(costa);
        bosque.a√±adirConexion(arena);
        costa.a√±adirConexion(arena);
        
        asignarEventos();
        if(checkVictoria()){
            victoria();
        }else{
            ticInicial();
        }
        listaFallecidos.setModel(muertos);
    }//GEN-LAST:event_formWindowOpened

    
    private void ticDiurno(){
        String textoFinal = "";
        for (Area area : areas) {
            textoFinal += area.realizarEventos();
            for (Object muerto : area.darMuertos()) {
                muertos.addElement(muerto);
                area.limpiarMuertos();
            }
        }
        areaEventos.setText(textoFinal);
    }
    
    private void ticNocturno(){
        String textoFinal = "";
        for (Area area : areas) {
            textoFinal += area.realizarEventos();
            for (Object muerto : area.darMuertos()) {
                muertos.addElement(muerto);
                area.limpiarMuertos();
            }
        }
        areaEventos.setText(textoFinal);
    }
    
    private void ticInicial(){
        String textoFinal = "";
        for (Area area : areas) {
            textoFinal += area.realizarEventos();
            for (Object muerto : area.darMuertos()) {
                muertos.addElement(muerto);
                area.limpiarMuertos();
            }
        }
        areaEventos.setText(textoFinal);
    }
    
    private boolean checkVictoria(){
        int totalJug = 0;
        for (Area area : areas) {
            for (Personaje pers : area.jugadores) {
                totalJug++;
            }
        }
        if(totalJug > 1){
            return false;
        }else{
            return true;
        }
    }
    
    private Personaje getGanador(){
        for (Area area : areas) {
            if(!area.jugadores.isEmpty()) return area.jugadores.get(0);
        }
        return new Personaje();
    }
    
    private String getEquipo(Personaje personaje){
        String devolver = "";
        for (Equipo equipo : equipos) {
            if(equipo.miembros.contains(personaje)) devolver = equipo.nombre;
        }
        return devolver;
    }
    
    private void victoria(){
        Personaje ganador = getGanador();
        String equipo = getEquipo(ganador);
        String ganadorText = String.format("¬°%s del equipo %s es el ganador!", ganador.nombre, equipo);
        areaEventos.setText(ganadorText);
        finalizado = true;
    }
    //Declaracion de eventos
    private void asignarEventos(){
        arena.a√±adirEvento(new Evento('I', 1, false, "%s escapa de la arena inicial."));
        arena.a√±adirEvento(new Evento('I', 1, false, "%s busca, sin √©xito, suministros en la arena inicial."));
        arena.a√±adirEvento(new Evento('I', 2, true, "%s es apu√±alado por %s por la espalda."));
        arena.a√±adirEvento(new Evento('I', 2, false, "%s y %s hacen una peque√±a tregua para escapar de la arena inicial juntos."));
        arena.a√±adirEvento(new Evento('I', 3, false, "%s, %s y %s se ignoran mutuamente para beneficio de todos."));
        arena.a√±adirEvento(new Evento('I',1,false,"%s se tropieza intentando huir de la arena."));
        arena.a√±adirEvento(new Evento('I',1,false,"%s busca y encuentra suministros en la arena inicial."));
        arena.a√±adirEvento(new Evento('I',1,false,"%s encuentra un peque√±o cuchillo en la arena."));
        arena.a√±adirEvento(new Evento('I',1,false,"%s encuentra armamento en la arena."));
        arena.a√±adirEvento(new Evento('I',2,false,"%s intenta huir, mientras que %s le persigue."));
        arena.a√±adirEvento(new Evento('I',2,false,"%s huye de la arena, sin saber que %s lo est√° persiguiendo."));
        arena.a√±adirEvento(new Evento('I',3,false,"%s, %s y %s se meten en una pelea, sin embargo, se dan cuenta de que no es el mejor momento y se separan."));
        arena.a√±adirEvento(new Evento('I', 2, true, "%s come una manzana que le da %s, sin saber que estaba envenada con cianuro."));
        
        bosque.a√±adirEvento(new Evento('D', 1, false, "%s busca suministros en el bosque."));
        bosque.a√±adirEvento(new Evento('D', 1, false, "%s recoge frutos del bosque."));
        bosque.a√±adirEvento(new Evento('N', 1, false, "%s duerme en una cueva."));
        bosque.a√±adirEvento(new Evento('N', 1, false, "%s sube a un arbol para dormir."));
        bosque.a√±adirEvento(new Evento('D',1,false,"%s recoje musgo."));
        bosque.a√±adirEvento(new Evento('D',1,false,"%s caza conejos."));
        bosque.a√±adirEvento(new Evento('D',1,false,"%s se cae a un r√≠o."));
        bosque.a√±adirEvento(new Evento('D',2,false,"%s es atacado por un oso, pero %s le ayuda a huir."));
        bosque.a√±adirEvento(new Evento('N', 2, false, "%s le roba las cosas a %s mientras duerme."));
        
        costa.a√±adirEvento(new Evento('D', 1, false, "%s se ba√±a en el mar."));
        costa.a√±adirEvento(new Evento('D', 2, true, "%s cae en la trampa de confiar en %s, y muere ahogado."));
        costa.a√±adirEvento(new Evento('N', 1, false, "%s hace una hoguera con corteza de palmera."));
        costa.a√±adirEvento(new Evento('N', 1, false, "%s mira las estrellas mientras escucha el oleaje."));
        costa.a√±adirEvento(new Evento('D', 1, false, "%s da un paseo por la playa."));
        costa.a√±adirEvento(new Evento('D', 1, false, "%s se lava las heridas con agua de mar."));
        costa.a√±adirEvento(new Evento('D', 1, false, "%s hierve agua para obtener agua potable."));
        costa.a√±adirEvento(new Evento('D', 2, false, "%s construye un castillo de arena para distraerse de los horrores del capitalismo."));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameJuego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaEventos;
    private javax.swing.JTextField conexiones;
    private javax.swing.JTextField displayMuerte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> jugadoresArea;
    private javax.swing.JLabel labelDia;
    private javax.swing.JList<String> listaFallecidos;
    private javax.swing.JList<String> mapa;
    private javax.swing.JButton pasarDia;
    // End of variables declaration//GEN-END:variables
}
