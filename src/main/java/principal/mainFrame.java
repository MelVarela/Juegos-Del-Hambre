package principal;

import java.util.ArrayList;
import javax.swing.*;

public class mainFrame extends javax.swing.JFrame {

    public mainFrame() {
        initComponents();
    }

    ArrayList<Equipo> equipos = new ArrayList<>();
    DefaultListModel nombreEquipos = new DefaultListModel();
    ArrayList<DefaultListModel> nombres = new ArrayList<>();
    ArrayList<Personaje> jugadores = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        checkStats = new javax.swing.JCheckBox();
        fieldNombre = new javax.swing.JTextField();
        fieldEquipo = new javax.swing.JTextField();
        labelMovimiento = new javax.swing.JLabel();
        labelVida = new javax.swing.JLabel();
        labelCarisma = new javax.swing.JLabel();
        fieldVida = new javax.swing.JTextField();
        fieldMovimiento = new javax.swing.JTextField();
        fieldCarisma = new javax.swing.JTextField();
        labelWarning1 = new javax.swing.JLabel();
        botonAnhadir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaEquipos = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaMiembros = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        displayEquipo = new javax.swing.JTextField();
        displayNombre = new javax.swing.JTextField();
        displayVida = new javax.swing.JTextField();
        displayPronombres = new javax.swing.JTextField();
        displayCarisma = new javax.swing.JTextField();
        displayMovimiento = new javax.swing.JTextField();
        botonEmpezar = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        fieldPronombres = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        nTest = new javax.swing.JTextField();
        bTest = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HungerGames");
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);
        setSize(new java.awt.Dimension(1920, 1080));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Simulador HG");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Equipo:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Pronombres:");

        checkStats.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkStats.setText("¿Stats?");
        checkStats.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkStatsStateChanged(evt);
            }
        });
        checkStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStatsActionPerformed(evt);
            }
        });

        fieldNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        fieldEquipo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        labelMovimiento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMovimiento.setText("Cordura:");
        labelMovimiento.setEnabled(false);

        labelVida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelVida.setText("Vida:");
        labelVida.setEnabled(false);

        labelCarisma.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelCarisma.setText("Carisma:");
        labelCarisma.setEnabled(false);

        fieldVida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fieldVida.setToolTipText("");
        fieldVida.setEnabled(false);

        fieldMovimiento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fieldMovimiento.setEnabled(false);

        fieldCarisma.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fieldCarisma.setEnabled(false);

        labelWarning1.setText("¡Ojo! Si añades un personaje con stats, todos deberán de tenerlos.");
        labelWarning1.setEnabled(false);

        botonAnhadir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        botonAnhadir.setText("Añadir");
        botonAnhadir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonAnhadirMouseClicked(evt);
            }
        });

        listaEquipos.setToolTipText("");
        listaEquipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaEquiposMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaEquipos);

        listaMiembros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaMiembrosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaMiembros);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Equipos");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Personajes");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Nombre:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Equipo:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Pronombres:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Vida:");
        jLabel10.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Movimiento:");
        jLabel11.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Carisma:");
        jLabel12.setEnabled(false);

        displayEquipo.setEditable(false);
        displayEquipo.setText("Equipo");

        displayNombre.setEditable(false);
        displayNombre.setText("Nombre");

        displayVida.setEditable(false);
        displayVida.setText("Vida");
        displayVida.setEnabled(false);

        displayPronombres.setEditable(false);
        displayPronombres.setText("Pronombres");

        displayCarisma.setEditable(false);
        displayCarisma.setText("Carisma");
        displayCarisma.setEnabled(false);

        displayMovimiento.setEditable(false);
        displayMovimiento.setText("Movimiento");
        displayMovimiento.setEnabled(false);

        botonEmpezar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonEmpezar.setText("Empezar");
        botonEmpezar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonEmpezarMouseClicked(evt);
            }
        });

        botonBorrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        botonBorrar.setText("Borrar");
        botonBorrar.setEnabled(false);
        botonBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonBorrarMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("WIP:");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("-Stats");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("-Equipos funcionales");

        fieldPronombres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino", "Neutro" }));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("-Objetos");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("-Recapitulación final");

        nTest.setText("NT");

        bTest.setText("AddT");
        bTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bTestMouseClicked(evt);
            }
        });

        jLabel15.setText("Test area:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelVida, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fieldVida, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fieldMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelCarisma, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fieldCarisma, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelWarning1)
                            .addComponent(botonAnhadir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(checkStats))
                                    .addGap(18, 18, 18)
                                    .addComponent(fieldPronombres, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(fieldEquipo))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(152, 152, 152))
                    .addComponent(botonEmpezar, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(displayPronombres, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(displayVida)
                                .addComponent(displayMovimiento)
                                .addComponent(displayCarisma))
                            .addComponent(displayNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayEquipo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(botonBorrar)))
                .addGap(257, 257, 257)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(170, 170, 170))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(nTest, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(67, 67, 67)
                            .addComponent(bTest)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel13))
                .addGap(27, 27, 27)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel17)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fieldEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fieldPronombres, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(checkStats)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelVida, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fieldVida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fieldMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelCarisma, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fieldCarisma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(labelWarning1))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(botonAnhadir))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(displayNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(displayEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(displayPronombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(displayVida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(displayMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(displayCarisma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(botonBorrar))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)))
                .addGap(43, 43, 43)
                .addComponent(botonEmpezar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 339, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(28, 28, 28)
                .addComponent(nTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bTest)
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkStatsActionPerformed

    private void checkStatsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkStatsStateChanged
        if (checkStats.isSelected()) {
            labelVida.setEnabled(true);
            labelMovimiento.setEnabled(true);
            labelCarisma.setEnabled(true);
            fieldVida.setEnabled(true);
            fieldMovimiento.setEnabled(true);
            fieldCarisma.setEnabled(true);
            labelWarning1.setEnabled(true);
        } else {
            labelVida.setEnabled(false);
            labelMovimiento.setEnabled(false);
            labelCarisma.setEnabled(false);
            fieldVida.setEnabled(false);
            fieldMovimiento.setEnabled(false);
            fieldCarisma.setEnabled(false);
            labelWarning1.setEnabled(false);
        }
    }//GEN-LAST:event_checkStatsStateChanged

    private void botonAnhadirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAnhadirMouseClicked
        if (checkRepetido(fieldNombre.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Ya existe un jugador con ese nombre.");
        } else {
            if (checkStats.isSelected()) {
                if (checkFull()) {
                    if (checkEquipo(fieldEquipo.getText())) {
                        crearPersonajeStats();
                    } else {
                        Equipo nuevoE = new Equipo(fieldEquipo.getText());
                        equipos.add(nuevoE);
                        DefaultListModel empty = new DefaultListModel();
                        nombres.add(empty);
                        crearPersonajeStats();
                        añadirEquipo(fieldEquipo.getText());
                    }
                }
            } else {
                if (checkMedio()) {
                    if (checkEquipo(fieldEquipo.getText())) {
                        crearPersonaje();
                    } else {
                        Equipo nuevoE = new Equipo(fieldEquipo.getText());
                        equipos.add(nuevoE);
                        DefaultListModel empty = new DefaultListModel();
                        nombres.add(empty);
                        crearPersonaje();
                        añadirEquipo(fieldEquipo.getText());
                    }
                }
            }
        }
    }//GEN-LAST:event_botonAnhadirMouseClicked

    private void listaEquiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaEquiposMouseClicked
        int ind = getIndex(listaEquipos.getSelectedValue());
        listaMiembros.setModel(nombres.get(ind));
    }//GEN-LAST:event_listaEquiposMouseClicked

    private void listaMiembrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaMiembrosMouseClicked
        String perso = listaMiembros.getSelectedValue();
        int ind = getIndex(listaEquipos.getSelectedValue());
        Personaje display = equipos.get(ind).getMiembro(perso);
        displayNombre.setText(display.nombre);
        displayEquipo.setText(listaEquipos.getSelectedValue());
        displayPronombres.setText(display.pronombres);
        if (checkStats.isSelected()) {
            jLabel10.setEnabled(true);
            jLabel11.setEnabled(true);
            jLabel12.setEnabled(true);
            displayVida.setEnabled(true);
            displayVida.setText(String.format("%d", display.vida));
            displayMovimiento.setEnabled(true);
            displayMovimiento.setText(String.format("%d", display.cordura));
            displayCarisma.setEnabled(true);
            displayCarisma.setText(String.format("%d", display.carisma));
        } else {
            jLabel10.setEnabled(false);
            jLabel11.setEnabled(false);
            jLabel12.setEnabled(false);
            displayVida.setEnabled(false);
            displayVida.setText("");
            displayMovimiento.setEnabled(false);
            displayMovimiento.setText("");
            displayCarisma.setEnabled(false);
            displayCarisma.setText("");
            botonBorrar.setEnabled(true);
        }
    }//GEN-LAST:event_listaMiembrosMouseClicked

    private void botonEmpezarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEmpezarMouseClicked
        if (equipos.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "No has añadido ningún personaje.");
        } else {
            frameJuego f = new frameJuego();
            f.setPersonajes(jugadores);
            f.setJugadoresArena(jugadores);
            f.setVisible(true);
            f.setEquipos(equipos);
            this.setVisible(false);
        }
    }//GEN-LAST:event_botonEmpezarMouseClicked

    private void botonBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBorrarMouseClicked
        Personaje deletear = obtenerPersonaje(listaMiembros.getSelectedValue());
        jugadores.remove(deletear);
        Equipo deletear2 = obtenerEquipo(deletear);
        if (deletear2.numMiembros <= 1) {
            nombres.get(getIndex(deletear2.nombre)).remove(getPlayerIndex(deletear));
            listaMiembros.setModel(nombres.get(getIndex(deletear2.nombre)));
            equipos.get(getIndex(deletear2.nombre)).borrarMiembro(deletear);
            nombreEquipos.removeElement(deletear2.nombre);
            equipos.remove(deletear2);
            clearLabelStats();
        } else {
            nombres.get(getIndex(deletear2.nombre)).remove(getPlayerIndex(deletear));
            listaMiembros.setModel(nombres.get(getIndex(deletear2.nombre)));
            equipos.get(getIndex(deletear2.nombre)).borrarMiembro(deletear);
            clearLabelStats();
        }
    }//GEN-LAST:event_botonBorrarMouseClicked

    private void bTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bTestMouseClicked
        Equipo t = new Equipo("T");
        equipos.add(t);
        DefaultListModel empty = new DefaultListModel();
        nombres.add(empty);
        añadirEquipo("T");
        for (int i = 1; i <= Integer.parseInt(nTest.getText()); i++) {
            String nombre = "T" + i;
            Personaje nuevo = new Personaje(nombre, valorPronombres());
            jugadores.add(nuevo);
            equipos.get(equipos.indexOf(t)).añadirMiembro(nuevo);
            nombres.get(getIndex("T")).addElement(nombre);
        }
    }//GEN-LAST:event_bTestMouseClicked

    private void clearLabelStats() {
        displayNombre.setText("");
        displayEquipo.setText("");
        displayPronombres.setText("");
        displayVida.setText("");
        displayMovimiento.setText("");
        displayCarisma.setText("");
    }

    private boolean checkRepetido(String nombre) {
        for (Equipo equipo : equipos) {
            for (Personaje player : equipo.getMiembros()) {
                if (player.nombre.equals(nombre)) {
                    return true;
                }
            }
        }
        return false;
    }

    private boolean checkMedio() {
        if ("".equals(fieldNombre.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Falta nombre.");
            return false;
        } else if ("".equals(fieldEquipo.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Falta equipo.");
            return false;
        } else if ("".equals(valorPronombres())) {
            JOptionPane.showMessageDialog(rootPane, "Faltan pronombres.");
            return false;
        } else {
            return true;
        }
    }

    private boolean checkFull() {
        if (checkMedio()) {
            if (!(comprueba(fieldVida.getText()))) {
                JOptionPane.showMessageDialog(rootPane, "Falta vida o el valor no es correcto.");
                return false;
            } else if (!(comprueba(fieldMovimiento.getText()))) {
                JOptionPane.showMessageDialog(rootPane, "Falta movimiento o el valor no es correcto.");
                return false;
            } else if (!(comprueba(fieldCarisma.getText()))) {
                JOptionPane.showMessageDialog(rootPane, "Falta carisma o el valor no es correcto.");
                return false;
            } else {
                return true;
            }
        } else {
            return true;
        }
    }

    private boolean comprueba(String texto) {
        try {
            Integer.parseInt(texto);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    private boolean checkEquipo(String nombreEquipo) {
        for (Equipo equipo : equipos) {
            if (equipo.nombre.equals(nombreEquipo)) {
                return true;
            }
        }
        return false;
    }

    private int pasarInt(String string) {
        return (Integer.parseInt(string));
    }

    private void añadirEquipo(String equipo) {
        nombreEquipos.addElement(equipo);

        listaEquipos.setModel(nombreEquipos);
    }

    private void añadirMiembro(int equipo, String miembro) {
        nombres.get(equipo).addElement(miembro);
    }

    private int getIndex(String equipo) {
        for (Equipo equipo1 : equipos) {
            if (equipo1.nombre.equals(equipo)) {
                return equipos.indexOf(equipo1);
            }
        }
        return -1;
    }

    private Personaje obtenerPersonaje(String nombre) {
        for (Personaje personaje : jugadores) {
            if (personaje.nombre.equals(nombre)) {
                return personaje;
            }
        }
        return null;
    }

    private Equipo obtenerEquipo(Personaje personaje) {
        for (Equipo equipo : equipos) {
            if (equipo.getMiembros().contains(personaje)) {
                return equipo;
            }
        }
        return null;
    }

    private int getPlayerIndex(Personaje personaje) {
        for (DefaultListModel nombre : nombres) {
            if (nombre.contains(personaje.nombre)) {
                return nombre.indexOf(personaje.nombre);
            }
        }
        return -1;
    }

    private void crearPersonajeStats() {
        Personaje nuevo = new Personaje(
                fieldNombre.getText(),
                valorPronombres(),
                pasarInt(fieldVida.getText()),
                pasarInt(fieldMovimiento.getText()),
                pasarInt(fieldCarisma.getText())
        );
        jugadores.add(nuevo);
        for (Equipo equipo : equipos) {
            if (equipo.nombre.equals(fieldEquipo.getText())) {
                equipos.get(equipos.indexOf(equipo)).añadirMiembro(nuevo);
                nombres.get(getIndex(fieldEquipo.getText())).addElement(fieldNombre.getText());
            }
        }

    }

    private void crearPersonaje() {
        Personaje nuevo = new Personaje(fieldNombre.getText(), valorPronombres());
        jugadores.add(nuevo);
        for (Equipo equipo : equipos) {
            if (equipo.nombre.equals(fieldEquipo.getText())) {
                equipos.get(equipos.indexOf(equipo)).añadirMiembro(nuevo);
                nombres.get(getIndex(fieldEquipo.getText())).addElement(fieldNombre.getText());
            }
        }
    }
    
    private String valorPronombres(){
        if(fieldPronombres.getSelectedItem() == "Masculino"){
            return "M";
        }else if(fieldPronombres.getSelectedItem() == "Femenino"){
            return "F";
        }else if(fieldPronombres.getSelectedItem() == "Neutro"){
            return "N";
        }else{
            return "";
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bTest;
    private javax.swing.JButton botonAnhadir;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonEmpezar;
    private javax.swing.JCheckBox checkStats;
    private javax.swing.JTextField displayCarisma;
    private javax.swing.JTextField displayEquipo;
    private javax.swing.JTextField displayMovimiento;
    private javax.swing.JTextField displayNombre;
    private javax.swing.JTextField displayPronombres;
    private javax.swing.JTextField displayVida;
    private javax.swing.JTextField fieldCarisma;
    private javax.swing.JTextField fieldEquipo;
    private javax.swing.JTextField fieldMovimiento;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JComboBox<String> fieldPronombres;
    private javax.swing.JTextField fieldVida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelCarisma;
    private javax.swing.JLabel labelMovimiento;
    private javax.swing.JLabel labelVida;
    private javax.swing.JLabel labelWarning1;
    private javax.swing.JList<String> listaEquipos;
    private javax.swing.JList<String> listaMiembros;
    private javax.swing.JTextField nTest;
    // End of variables declaration//GEN-END:variables
}
